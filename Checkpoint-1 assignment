import tensorflow as tf
from tensorflow.keras import layers, models
from tensorflow.keras.utils import to_categorical

# 1. Load and preprocess data
(img_train, lbl_train), (img_test, lbl_test) = tf.keras.datasets.mnist.load_data()
img_train = img_train.reshape(-1, 28, 28, 1).astype('float32') / 255.0
img_test = img_test.reshape(-1, 28, 28, 1).astype('float32') / 255.0
lbl_train = to_categorical(lbl_train, 10)
lbl_test = to_categorical(lbl_test, 10)

# 2. Define CNN architecture
model = models.Sequential([
    layers.Conv2D(32, (3,3), padding='same', activation='relu', input_shape=(28,28,1)),
    layers.MaxPooling2D((2,2), strides=2),
    layers.Conv2D(64, (3,3), activation='relu'),
    layers.MaxPooling2D((2,2)),
    layers.Flatten(),
    layers.Dense(128, activation='relu'),
    layers.Dense(10, activation='softmax')
])

# 3. Compile the model
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# 4. Train
model.fit(img_train, lbl_train, epochs=5, batch_size=128,
          validation_split=0.1)

# 5. Evaluate
test_loss, test_acc = model.evaluate(img_test, lbl_test)
print(f"Test accuracy: {test_acc:.4f}")
